# 设置日志对象的 Handler
# 之所以不设置全局的日志对象，是因为SDK中部分类库使用了java.util.logging来管理日志，若设置成全局的，可能会使这部分类库因为无法创建日志文件等原因而出现异常。当前日志系统已经有效地避免了该异常的抛出。
cn.emagsoftware.util.jlog.JLog.handlers=java.util.logging.ConsoleHandler,java.util.logging.FileHandler
cn.emagsoftware.util.jlog.JLog.level=ALL
# 取消发送日志到父 Logger对象
cn.emagsoftware.util.jlog.JLog.useParentHandlers=false

#为 Handler 指定默认的级别（默认为 Level.INFO）。
#Level的七个等级SEVERE（最高值） 、WARNING 、INFO 、CONFIG 、FINE 、FINER 、FINEST（最低值）   。这个不同于log4j
java.util.logging.ConsoleHandler.level=ALL
# 指定要使用的 Formatter 类的名称（默认为 java.util.logging.SimpleFormatter）。
java.util.logging.ConsoleHandler.formatter=cn.emagsoftware.util.jlog.GenericFormatter

# 为 Handler 指定默认的级别（默认为 Level.ALL）。
java.util.logging.FileHandler.level=ALL
# 指定要使用的 Formatter 类的名称（默认为 java.util.logging.XMLFormatter）。
java.util.logging.FileHandler.formatter=cn.emagsoftware.util.jlog.GenericFormatter
# 指定要写入到任意文件的近似最大量（以字节为单位）。如果该数为 0，则没有限制（默认为无限制）。
java.util.logging.FileHandler.limit=1048576
# 指定有多少输出文件参与循环（默认为 1）。
java.util.logging.FileHandler.count=2
# 为生成的输出文件名称指定一个模式。有关细节请参见以下内容（默认为 "%h/java%u.log"）。
java.util.logging.FileHandler.pattern=/sdcard/log%u.log
# 指定是否应该将 FileHandler 追加到任何现有文件上（默认为 false）。
java.util.logging.FileHandler.append=true
